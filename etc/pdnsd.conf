// pdnsd configuration file.

global {
	perm_cache=16384;
	cache_dir="/var/cache/pdnsd";
#	pid_file = /var/run/pdnsd.pid;
	run_as="pdnsd";
	server_ip = 127.0.0.1;  # Use eth0 here if you want to allow other
				            # machines on your network to query pdnsd.
	status_ctl = on;
#	paranoid=on;       # This option reduces the chance of cache poisoning
	                   # but may make pdnsd less efficient, unfortunately.
	query_method=udp_tcp;
	min_ttl=36h;       # Retain cached entries at least 15 minutes.
	max_ttl=4w;        # One week.
	timeout=10;        # Global timeout option (10 seconds).
	neg_domain_pol=on;
    par_queries=1;
	udpbufsize=1024;   # Upper limit on the size of UDP messages.
}

# First line is OpenNIC servers, rest are privacy/anticensorship servers
server {
	label= "censorthis";
	ip = 128.173.89.246, 72.14.183.109,	72.232.162.195,	66.244.95.20,
		87.118.100.175,
		87.118.104.203,
		94.75.228.29,
		85.214.20.141,
		213.73.91.35,
		194.150.168.168,
		62.141.58.13;

	proxy_only=on;     # Do not query any name servers beside your ISP's.
	                   # This may be necessary if you are behind some
	                   # kind of firewall and cannot receive replies
	                   # from outside name servers.
	timeout=4;         # Server timeout; this may be much shorter
			   		   # that the global timeout option.
	uptest=if;         # Test if the network interface is active.
	interface=wlan0;   # The name of the interface to check.
	#interval=ontimeout; # Check every 10 minutes.
	purge_cache=off;   # Keep stale cache entries in case the ISP's DNS servers go offline.
	edns_query=yes;    # Use EDNS for outgoing queries to allow UDP messages
    		  		   # larger than 512 bytes. May cause trouble with some legacy systems.
}

/*
server {
	label= "isps";
	ip = 208.67.220.220, 208.67.222.222,
		 4.2.2.1, 4.2.2.4, 4.2.2.5,
		 8.8.4.4, 205.171.3.25, 24.25.5.150, 24.25.5.149;

	proxy_only=on;     # Do not query any name servers beside your ISP's.
	                   # This may be necessary if you are behind some
	                   # kind of firewall and cannot receive replies
	                   # from outside name servers.
	timeout=4;         # Server timeout; this may be much shorter
			   		   # that the global timeout option.
	uptest=query;      # Test if the network interface is active.
	interface=wlan0;   # The name of the interface to check.
	interval=ontimeout; # Check every 10 minutes.
	purge_cache=off;   # Keep stale cache entries in case the ISP's
			 		   # DNS servers go offline.
}
*/

/*
server {
	label= "tordns";
	ip = 127.0.0.1;    # Put your ISP's DNS-server address(es) here.
    port=9053;
	proxy_only=on;     # Do not query any name servers beside your ISP's.
	                   # This may be necessary if you are behind some
	                   # kind of firewall and cannot receive replies
	                   # from outside name servers.
	timeout=4;         # Server timeout; this may be much shorter
			   		   # that the global timeout option.
	uptest=query;      # Test if the network interface is active.
	interface=wlan0;   # The name of the interface to check.
	interval=ontimeout; # Check every 10 minutes.
	purge_cache=off;   # Keep stale cache entries in case the ISP's
			 		   # DNS servers go offline.
}
*/

source {
	owner=localhost;
#	serve_aliases=on;
	file="/etc/hosts";
}
rr {
	name=localhost;
	reverse=on;
	a=127.0.0.1;
	owner=localhost;
	soa=localhost,root.localhost,42,86400,900,86400,86400;
}
